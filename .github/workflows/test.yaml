name: foxwren tests
on: push
env:
  runId: ${GITHUB_RUN_ID}
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.8.0
      - run: zig build test
  build-testrunner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.8.0
      - run: zig build --build-file test/build.zig --prefix ./
      - run: cp bin/testrunner testrunner
      - uses: actions/upload-artifact@master
        with:
          name: testrunner-${{ env.runId }}
          path: testrunner
  test-address:
    needs: build-testrunner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: testrunner-${{ env.runId }}
      - run: ./testrunner test/testsuite-generated/address.json
  # testsuite:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@master
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-single-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-single-buildx
  #     - name: Build test image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         builder: ${{ steps.buildx.outputs.name }}
  #         file: Dockerfile
  #         load: true
  #         push: false
  #         tags: foxwren-test
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new
  #     - name: Run tests
  #       run: docker run foxwren-test
  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.8.0
      - run: zig fmt --check src/*.zig
